package common;

public class RobotMap{
    public static double DRIVE_STICK_DEADBAND;
    public static double DRIVE_RAMP_SECONDS;
    public static double DRIVE_MOTOR_DEADBAND;
    public static double DRIVER_SPEED_PROPORTION;
    public static double DRIVER_TURN_PROPORTION;
    public static  double DRIVER_SPEED_PROPORTION_SLOW;
    public static double DRIVER_TURN_PROPORTION_SLOW;
    public static double GUNNER_SPEED_PROPORTION;
    public static double GUNNER_TURN_PROPORTION;
    public static double FAILSAFE_TRIM_FORWARD_DEFAULT;
    public static double FAILSAFE_TRIM_REVERSE_DEFAULT;
    public static double DRIVER_SLOW_TRIGGER_THRESHOLD;
    public static int ENCODER_TICKS_PER_ROTATION;
    public static int DRIVE_MAX_RPMS;
    public static double WHEEL_CIRCUMFERENCE_INCHES;
    public static int VEL_FEED_FWD;
    public static int TALON_TIMEOUT_MS;
    public static int TALON_PID_PRIMARY;
    public static int TALON_SLOT_VELOCITY;
    public static int TALON_SLOT_DISTANCE;
    public static int TALON_SLOT_TURNING;
    public static PIDValues PID_DRIVE_POS;
    public static PIDValues PID_DRIVE_SPEED;
    public static PIDValues PID_DRIVE_YAW;
    public static int GYRO_AXIS_YAW;
    public static int CAN_ID_RIGHT_DRIVE;
    public static int CAN_ID_RIGHT_DRIVE_SLAVE;
    public static int CAN_ID_LEFT_DRIVE_SLAVE;
    public static int CAN_ID_LEFT_DRIVE;
    public static int CAN_ID_PIGEON_IMU;
    public static int GYRO_AXIS_TOTAL;
    public static double DRIVER_ENCODER_MAX_FORWARD_LIMIT_FACTOR;
    public static int DRIVER_ENCODER_MAX_DIFF;
    

    public RobotMap(int DRIVE_MAX_RPMS, int ENCODER_TICKS_PER_ROTATION, double DRIVE_STICK_DEADBAND,
     double DRIVE_RAMP_SECONDS, double DRIVE_MOTOR_DEADBAND, double DRIVER_SPEED_PROPORTION,
     double DRIVER_TURN_PROPORTION, double DRIVER_SPEED_PROPORTION_SLOW, 
     double DRIVER_TURN_PROPORTION_SLOW, double GUNNER_SPEED_PROPORTION, double GUNNER_TURN_PROPORTION,
     double FAILSAFE_TRIM_FORWARD_DEFAULT, double FAILSAFE_TRIM_REVERSE_DEFAULT, 
     double  DRIVER_SLOW_TRIGGER_THRESHOLD, int CAN_ID_LEFT_DRIVE, int CAN_ID_LEFT_SLAVE, 
     int CAN_ID_RIGHT_DRIVE,
     int CAN_ID_RIGHT_SLAVE, int CAN_ID_Pigeon_IMU, int GYRO_AXIS_TOTAL,
     int VEL_FEED_FWD,
     double WHEEL_CIRCUMFERENCE_INCHES, int TALON_TIMEOUT_MS,
     int TALON_PID_PRIMARY, int TALON_SLOT_VELOCITY,
     int TALON_SLOT_DISTANCE, int TALON_SLOT_TURNING, PIDValues PID_DRIVE_POS, PIDValues PID_DRIVE_SPEED,
     PIDValues PID_DRIVE_YAW, int GYRO_AXIS_YAW, double DRIVER_ENCODER_MAX_FORWARD_LIMIT_FACTOR, 
     int DRIVER_ENCODER_MAX_DIFF ){

        RobotMap.CAN_ID_RIGHT_DRIVE = CAN_ID_RIGHT_DRIVE;
        RobotMap.CAN_ID_RIGHT_DRIVE_SLAVE = CAN_ID_RIGHT_SLAVE;
        RobotMap.CAN_ID_LEFT_DRIVE_SLAVE = CAN_ID_LEFT_SLAVE;
        RobotMap.CAN_ID_LEFT_DRIVE = CAN_ID_LEFT_DRIVE;
        RobotMap.CAN_ID_PIGEON_IMU = CAN_ID_Pigeon_IMU;
        RobotMap.GYRO_AXIS_TOTAL = GYRO_AXIS_TOTAL;
        
        RobotMap.DRIVER_ENCODER_MAX_FORWARD_LIMIT_FACTOR = DRIVER_ENCODER_MAX_FORWARD_LIMIT_FACTOR;
        RobotMap.DRIVER_ENCODER_MAX_DIFF = DRIVER_ENCODER_MAX_DIFF;


        RobotMap.DRIVE_MAX_RPMS = DRIVE_MAX_RPMS;
        RobotMap.ENCODER_TICKS_PER_ROTATION = ENCODER_TICKS_PER_ROTATION;
        RobotMap.DRIVE_STICK_DEADBAND = DRIVE_STICK_DEADBAND;
        RobotMap.DRIVE_RAMP_SECONDS = DRIVE_RAMP_SECONDS;
        RobotMap.DRIVE_MOTOR_DEADBAND = DRIVE_MOTOR_DEADBAND;
        RobotMap.DRIVER_SPEED_PROPORTION = DRIVER_SPEED_PROPORTION;
        RobotMap.DRIVER_TURN_PROPORTION = DRIVER_TURN_PROPORTION;
        RobotMap.DRIVER_SPEED_PROPORTION_SLOW = DRIVER_SPEED_PROPORTION_SLOW;
        RobotMap.DRIVER_TURN_PROPORTION_SLOW = DRIVER_TURN_PROPORTION_SLOW;
        RobotMap.GUNNER_SPEED_PROPORTION = GUNNER_SPEED_PROPORTION;
        RobotMap.GUNNER_TURN_PROPORTION = GUNNER_TURN_PROPORTION;
        RobotMap.FAILSAFE_TRIM_FORWARD_DEFAULT = FAILSAFE_TRIM_FORWARD_DEFAULT;
        RobotMap.FAILSAFE_TRIM_REVERSE_DEFAULT = FAILSAFE_TRIM_REVERSE_DEFAULT;
        RobotMap. DRIVER_SLOW_TRIGGER_THRESHOLD =  DRIVER_SLOW_TRIGGER_THRESHOLD;
        RobotMap.DRIVE_MAX_RPMS = DRIVE_MAX_RPMS;
        RobotMap.VEL_FEED_FWD = VEL_FEED_FWD / DRIVE_MAX_RPMS;
        RobotMap.WHEEL_CIRCUMFERENCE_INCHES = WHEEL_CIRCUMFERENCE_INCHES;
        RobotMap.TALON_TIMEOUT_MS = TALON_TIMEOUT_MS;
        RobotMap.TALON_PID_PRIMARY = TALON_PID_PRIMARY;
        RobotMap.DRIVE_MOTOR_DEADBAND = DRIVE_MOTOR_DEADBAND;
        RobotMap.DRIVE_RAMP_SECONDS = DRIVE_RAMP_SECONDS;
        RobotMap.TALON_SLOT_VELOCITY = TALON_SLOT_VELOCITY;
        RobotMap.TALON_SLOT_DISTANCE = TALON_SLOT_DISTANCE;
        RobotMap.TALON_SLOT_TURNING = TALON_SLOT_TURNING;
        RobotMap.PID_DRIVE_POS = PID_DRIVE_POS;
        RobotMap.PID_DRIVE_SPEED = PID_DRIVE_SPEED;
        RobotMap.PID_DRIVE_YAW = PID_DRIVE_YAW;
        RobotMap.GYRO_AXIS_YAW = GYRO_AXIS_YAW;






      
    }
    
    public static final int MILLISECONDS_PER_SECOND = 1000;
    public static final int MILLIS_PER_MINUTE = 60 * MILLISECONDS_PER_SECOND;
    public static final int VELOCITY_UNITS_PER_MIN = MILLIS_PER_MINUTE / 100;
    public static final int MAX_ENCODER_VELOCITY = DRIVE_MAX_RPMS * ENCODER_TICKS_PER_ROTATION / VELOCITY_UNITS_PER_MIN;
    public static final int GUNNER_ENCODER_TURN_RATE = (int)(MAX_ENCODER_VELOCITY * 0.5);
    public static final int GUNNER_ENCODER_SPEED = (int)(MAX_ENCODER_VELOCITY * 0.5);
    public static final int DRIVER_ENCODER_TURN_RATE = (int)(MAX_ENCODER_VELOCITY * 0.60);
    public static final int DRIVER_ENCODER_SPEED = MAX_ENCODER_VELOCITY;
    public static final int DRIVER_ENCODER_SLOW_TURN_RATE = (int)(MAX_ENCODER_VELOCITY * 0.5);
    public static final int DRIVER_ENCODER_SLOW_SPEED = (int)(MAX_ENCODER_VELOCITY * 0.5);
   
}